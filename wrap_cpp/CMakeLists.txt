CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0 FATAL_ERROR)

project("DES3")
set(PROJECT_VERSION 1.0.0)

## BOOST
SET(BOOST_LIBS ${BOOST_LIBS}
    python
)
# SET(Boost_USE_MULTITHREADED ON)
# SET(Boost_USE_STATIC_RUNTIME OFF)
# SET(Boost_USE_STATIC_LIBS OFF)

# SET(Boost_USE_STATIC_LIBS OFF)
# SET(Boost_USE_MULTITHREADED ON)
# SET(Boost_USE_STATIC_RUNTIME OFF)
# ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)

### DEPENDENCIES ###
FIND_PACKAGE(Boost COMPONENTS ${BOOST_LIBS})
FIND_PACKAGE(PythonLibs 2.7 REQUIRED)

### CONFIGURATION ###

SET(CMAKE_CXX_STANDARD 11)
# IF(CMAKE_COMPILER_IS_GNUCXX AND NOT WIN32 OR APPLE)
#     ADD_DEFINITIONS(-DRTI_LINUX -DRTI_UNIX)
#     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g3 -Wall -Winvalid-pch -O3")
#     SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -ldl")
#     if(APPLE)
#         SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -ldl -fPIC -shared")
#     else(APPLE)
#         SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -ldl -fPIC -Wl,-export-dynamic -shared")
#     endif(APPLE)
# ELSE(CMAKE_COMPILER_IS_GNUCSS AND NOT WIN32)
#     ADD_DEFINITIONS(-DNDDS_DLL_VARIABLE)
#     ADD_DEFINITIONS(-DRTI_WIN32)
# ENDIF ()

SET(LIBRARIES
    ${Boost_LIBRARIES}
    ${PYTHON_LIBRARIES}
)

### INCLUDE DIRECTORIES ###
## (-I flag)
INCLUDE_DIRECTORIES(
    .
    "cppDES/cppDES"
    ${Boost_INCLUDE_DIRS}
    ${PYTHON_INCLUDE_DIRS}
)

LINK_DIRECTORIES(
    ${Boost_LIBRARY_DIRS}
)
FILE(GLOB_RECURSE SOURCES "*.cpp")

PYTHON_ADD_MODULE(DES3 ${SOURCES})
TARGET_LINK_LIBRARIES(DES3 ${LIBRARIES} )
